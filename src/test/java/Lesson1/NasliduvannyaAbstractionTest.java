package Lesson1;

import org.junit.jupiter.api.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.testng.AssertJUnit.assertEquals;
import static org.testng.AssertJUnit.assertTrue;

public class NasliduvannyaAbstractionTest {

    @Test
    void testPrintedBookDisplayInfo() {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç PrintedBook
        PrintedBook printedBook = new PrintedBook("The Art of Computer Programming", "Donald Knuth", 700);

        //ByteArrayOutputStream - –æ–∑–Ω–∞—á–∞—î —â–æ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –æ–±'—î–∫—Ç —Ç–∏–ø—É ByteArrayOutputStream –¥–æ–∑–≤–æ–¥—è—î –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –±–∞–π—Ç–∏ –≤ –ø–∞–º—è—Ç—å, –∞ –Ω–µ –Ω–∞ –¥–∏–≤—Å–∫ —á–∏ –º–µ—Ä–µ–∂—É
        //outputStream - —É–µ –∑–º—ñ–Ω–Ω–∞ —è–∫–∞ –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç ByteArrayOutputStream, —Ç–∞–∫–æ–∂ —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –≤–∏–≤—ñ–¥ —É –∫–æ–Ω—Å–æ–ª—å
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        System.setOut(new PrintStream(outputStream));

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ displayInfo() —è–∫–∏–π —î —É –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–º—É –∫–ª–∞—Å—É BookStore —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        printedBook.displayInfo();

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–æ—Ç—ñ–∫ –≤–∏–≤–æ–¥—É
        System.setOut(System.out);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∏–≤–µ–¥–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        String expectedOutput = "üìñ Printed BookStore: The Art of Computer Programming by Donald Knuth, 700 pages.";
        assertEquals(expectedOutput, outputStream.toString().trim());
    }
    @Test
    void testBookInstanceOf() {
        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∫–Ω–∏–≥
        Book printedBook = new PrintedBook("Java Programming", "James Gosling", 600);
        Book audioBook = new AudioBook("The Pragmatic Programmer", "Andy Hunt", 10.5);
        Book ebook = new Ebook("Design Patterns", "Erich Gamma", 4.0);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤–æ–Ω–∏ –ø—ñ–¥—Ç–∏–ø–∞–º–∏ –∫–ª–∞—Å—É BookStore
        //instanceof –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —â–æ –≤—Å—ñ —Ç—Ä–∏ –æ–±'—î–∫—Ç–∏ —Å–ø—Ä–∞–≤–¥—ñ —î –µ–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ BookStore.
        assertTrue(printedBook instanceof Book);
        assertTrue(audioBook instanceof Book);
        assertTrue(ebook instanceof Book);
    }


    @Test
    void testSetAndGetDurationHours() {
        AudioBook audioBook = new AudioBook("The Pragmatic Programmer", "Andy Hunt", 12.5);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ
        //assertEquals ‚Äî —Ü–µ –º–µ—Ç–æ–¥ –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è JUnit, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —á–∏ –¥–æ—Ä—ñ–≤–Ω—é—é—Ç—å –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è.
        //expected ‚Äî —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –æ—á—ñ–∫—É—î—à.
        //actual ‚Äî —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞—à –∫–æ–¥.
        assertEquals(12.5, audioBook.getDurationHours());

        // –ó–º—ñ–Ω–∞ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä
        audioBook.setDurationHours(15.0);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–æ—ó —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ
        assertEquals(15.0, audioBook.getDurationHours());
    }


}
